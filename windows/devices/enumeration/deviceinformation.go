// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package enumeration

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
)

const SignatureDeviceInformation string = "rc(Windows.Devices.Enumeration.DeviceInformation;{aba0fb95-4398-489d-8e44-e6130927011f})"

type DeviceInformation struct {
	ole.IUnknown
}

func (impl *DeviceInformation) GetId() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformation))
	defer itf.Release()
	v := (*iDeviceInformation)(unsafe.Pointer(itf))
	return v.GetId()
}

func (impl *DeviceInformation) GetName() (string, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformation))
	defer itf.Release()
	v := (*iDeviceInformation)(unsafe.Pointer(itf))
	return v.GetName()
}

func (impl *DeviceInformation) GetPairing() (*DeviceInformationPairing, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformation2))
	defer itf.Release()
	v := (*iDeviceInformation2)(unsafe.Pointer(itf))
	return v.GetPairing()
}

const GUIDiDeviceInformation string = "aba0fb95-4398-489d-8e44-e6130927011f"
const SignatureiDeviceInformation string = "{aba0fb95-4398-489d-8e44-e6130927011f}"

type iDeviceInformation struct {
	ole.IInspectable
}

type iDeviceInformationVtbl struct {
	ole.IInspectableVtbl

	GetId                  uintptr
	GetName                uintptr
	GetIsEnabled           uintptr
	GetIsDefault           uintptr
	GetEnclosureLocation   uintptr
	GetProperties          uintptr
	Update                 uintptr
	GetThumbnailAsync      uintptr
	GetGlyphThumbnailAsync uintptr
}

func (v *iDeviceInformation) VTable() *iDeviceInformationVtbl {
	return (*iDeviceInformationVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iDeviceInformation) GetId() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetId,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

func (v *iDeviceInformation) GetName() (string, error) {
	var outHStr ole.HString
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetName,
		uintptr(unsafe.Pointer(v)),        // this
		uintptr(unsafe.Pointer(&outHStr)), // out string
	)

	if hr != 0 {
		return "", ole.NewError(hr)
	}

	out := outHStr.String()
	ole.DeleteHString(outHStr)
	return out, nil
}

const GUIDiDeviceInformation2 string = "f156a638-7997-48d9-a10c-269d46533f48"
const SignatureiDeviceInformation2 string = "{f156a638-7997-48d9-a10c-269d46533f48}"

type iDeviceInformation2 struct {
	ole.IInspectable
}

type iDeviceInformation2Vtbl struct {
	ole.IInspectableVtbl

	GetKind    uintptr
	GetPairing uintptr
}

func (v *iDeviceInformation2) VTable() *iDeviceInformation2Vtbl {
	return (*iDeviceInformation2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iDeviceInformation2) GetPairing() (*DeviceInformationPairing, error) {
	var out *DeviceInformationPairing
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetPairing,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out DeviceInformationPairing
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

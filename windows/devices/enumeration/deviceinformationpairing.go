// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package enumeration

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureDeviceInformationPairing string = "rc(Windows.Devices.Enumeration.DeviceInformationPairing;{2c4769f5-f684-40d5-8469-e8dbaab70485})"

type DeviceInformationPairing struct {
	ole.IUnknown
}

func (impl *DeviceInformationPairing) GetIsPaired() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformationPairing))
	defer itf.Release()
	v := (*iDeviceInformationPairing)(unsafe.Pointer(itf))
	return v.GetIsPaired()
}

func (impl *DeviceInformationPairing) GetCanPair() (bool, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformationPairing))
	defer itf.Release()
	v := (*iDeviceInformationPairing)(unsafe.Pointer(itf))
	return v.GetCanPair()
}

func (impl *DeviceInformationPairing) PairAsync() (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformationPairing))
	defer itf.Release()
	v := (*iDeviceInformationPairing)(unsafe.Pointer(itf))
	return v.PairAsync()
}

func (impl *DeviceInformationPairing) GetCustom() (*DeviceInformationCustomPairing, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformationPairing2))
	defer itf.Release()
	v := (*iDeviceInformationPairing2)(unsafe.Pointer(itf))
	return v.GetCustom()
}

func (impl *DeviceInformationPairing) UnpairAsync() (*foundation.IAsyncOperation, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiDeviceInformationPairing2))
	defer itf.Release()
	v := (*iDeviceInformationPairing2)(unsafe.Pointer(itf))
	return v.UnpairAsync()
}

const GUIDiDeviceInformationPairing string = "2c4769f5-f684-40d5-8469-e8dbaab70485"
const SignatureiDeviceInformationPairing string = "{2c4769f5-f684-40d5-8469-e8dbaab70485}"

type iDeviceInformationPairing struct {
	ole.IInspectable
}

type iDeviceInformationPairingVtbl struct {
	ole.IInspectableVtbl

	GetIsPaired                  uintptr
	GetCanPair                   uintptr
	PairAsync                    uintptr
	PairWithProtectionLevelAsync uintptr
}

func (v *iDeviceInformationPairing) VTable() *iDeviceInformationPairingVtbl {
	return (*iDeviceInformationPairingVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iDeviceInformationPairing) GetIsPaired() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetIsPaired,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iDeviceInformationPairing) GetCanPair() (bool, error) {
	var out bool
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCanPair,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out bool
	)

	if hr != 0 {
		return false, ole.NewError(hr)
	}

	return out, nil
}

func (v *iDeviceInformationPairing) PairAsync() (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().PairAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiDeviceInformationPairing2 string = "f68612fd-0aee-4328-85cc-1c742bb1790d"
const SignatureiDeviceInformationPairing2 string = "{f68612fd-0aee-4328-85cc-1c742bb1790d}"

type iDeviceInformationPairing2 struct {
	ole.IInspectable
}

type iDeviceInformationPairing2Vtbl struct {
	ole.IInspectableVtbl

	GetProtectionLevel                      uintptr
	GetCustom                               uintptr
	PairWithProtectionLevelAndSettingsAsync uintptr
	UnpairAsync                             uintptr
}

func (v *iDeviceInformationPairing2) VTable() *iDeviceInformationPairing2Vtbl {
	return (*iDeviceInformationPairing2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iDeviceInformationPairing2) GetCustom() (*DeviceInformationCustomPairing, error) {
	var out *DeviceInformationCustomPairing
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCustom,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out DeviceInformationCustomPairing
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *iDeviceInformationPairing2) UnpairAsync() (*foundation.IAsyncOperation, error) {
	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().UnpairAsync,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
